{{- if .Values.gateway.ws.enabled }}
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ include "gateway.fullname" . }}
  labels:
    {{- include "gateway.labels" . | nindent 4 }}
spec:
  serviceName: {{ include "gateway.fullname" . }}
  {{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.replicaCount }}
  {{- end }}
  revisionHistoryLimit: {{ .Values.revisionHistoryLimit }}
  selector:
    matchLabels:
      {{- include "gateway.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "gateway.selectorLabels" . | nindent 8 }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "gateway.serviceAccountName" . }}
      volumes:
          {{- if .Values.gateway.auth.enabled }}
        - name: gateway-extra-appsettings
          configMap:
            name: gateway-extra-appsettings
            items:
            - key: "appsettings.{{ .Release.Name }}.json"
              path: "appsettings.{{ .Release.Name }}.json"
          {{- end }}
          {{- if .Values.gateway.containerSecurityContext.enabled }}
        - name: gateway-tmp
          emptyDir: {}
          {{- end }}
      containers:
        - name: {{ include "gateway.name" . }}
          securityContext:
            {{- toYaml .Values.gateway.containerSecurityContext | nindent 12 }}
          image: '{{ .Values.gateway.image.repository }}:{{ .Values.gateway.image.tag | default "latest" }}'
          imagePullPolicy: {{ .Values.gateway.image.pullPolicy }}
          {{- if .Values.gateway.auth.enabled }}
          volumeMounts:
          - mountPath: "/data/appsettings.{{ .Release.Name }}.json"
            subPath:  "appsettings.{{ .Release.Name }}.json"
            name: gateway-extra-appsettings
          - mountPath: /tmp
            name: gateway-temp
          {{- end }}
          env:
            {{- range $key, $value := include "gateway.extractEnvVars" . }}
            - name: {{ $key }}
              value: {{ $value | quote }}
            {{- end }}
          ports:
            - name: ws
              containerPort: 9090
              protocol: TCP
            - name: http
              containerPort: 8080
              protocol: TCP
          resources:
            {{- toYaml .Values.gateway.resources | nindent 12 }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
{{- end }}
