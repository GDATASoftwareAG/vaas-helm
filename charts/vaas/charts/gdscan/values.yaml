replicaCount: 1
deploymentStrategy: "Recreate"
server:
  name: server
  image:
    repository: ghcr.io/gdatasoftwareag/vaas/scanserver
    pullPolicy: Always
    tag: 1
  containerSecurityContext:
    enabled: true
    readOnlyRootFilesystem: true
    allowPrivilegeEscalation: false
    runAsNonRoot: true
    capabilities:
      drop: ["ALL"]
    seccompProfile:
      type: RuntimeDefault
    runAsGroup: 1001
    runAsUser: 1001
client:
  name: client
  image:
    repository: ghcr.io/gdatasoftwareag/vaas/scanclient
    pullPolicy: Always
    tag: 1
  containerSecurityContext:
    enabled: true
    readOnlyRootFilesystem: true
    allowPrivilegeEscalation: false
    runAsNonRoot: true
    capabilities:
      drop: ["ALL"]
    seccompProfile:
      type: RuntimeDefault
terminationGracePeriodSeconds: 30

imagePullSecrets:
  - gdscanregistry

nameOverride: ""
fullnameOverride: ""

networkPolicy:
  enabled: false

podAnnotations: {}

secret:
  dockerconfigjson: ""

service:
  type: ""
  port: 8080

metrics:
  servicemonitor:
    enabled: false
    port: 8080
    path: /metrics

ingress:
  enabled: false
  className: ""
  annotations: {}
  hosts:
    - host: gdscan.local
      paths:
        - path: /
          pathType: ImplementationSpecific
  tls: []

resources:
  server:
    limits:
      memory: 2Gi
    requests:
      cpu: 2
      memory: 2Gi
  client:
    limits:
      memory: 128Mi
    requests:
      cpu: 1
      memory: 128Mi

autoscaling:
  enabled: false
  minReplicas: 2
  maxReplicas: 20
  targetCPU: 75
  metrics:

nodeSelector: {}

tolerations: []

affinity: {}

persistence:
  enabled: false
  accessMode: ReadWriteOnce
  memory: false
  size: 5Gi
  storageClass: ""

autoUpdate:
  image:
    registry: docker.io
    repository: bitnami/kubectl
    tag: 1.29
  containerSecurityContext:
    enabled: true
    readOnlyRootFilesystem: true
    allowPrivilegeEscalation: false
    runAsNonRoot: true
    capabilities:
      drop: ["ALL"]
    seccompProfile:
      type: RuntimeDefault
  enabled: true
  # every hour
  schedule: "0 * * * *"
  networkPolicy:
    enabled: true
    k8sApiPort: 6443
