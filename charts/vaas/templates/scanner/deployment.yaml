{{- if or (.Values.scanner.persistence.enabled | not) (eq .Values.scanner.persistence.accessMode "ReadWriteMany" ) }}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "scanner.fullname" . }}
  labels:
    {{- include "scanner.labels" . | nindent 4 }}
spec:
  strategy:
    type: {{ .Values.scanner.deploymentStrategy }}
  {{- if not .Values.scanner.autoscaling.enabled }}
  replicas: {{ .Values.scanner.replicaCount }}
  {{- end }}
  selector:
    matchLabels:
      {{- include "scanner.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      {{- with .Values.scanner.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "scanner.selectorLabels" . | nindent 8 }}
    spec:
      volumes:
        - name: samples
        {{- if .Values.scanner.persistence.enabled }}
          persistentVolumeClaim:
            claimName: {{ include "vaas.claimName" . }}
        {{- else }}
          emptyDir:
            sizeLimit: {{ .Values.scanner.persistence.size | quote }}
          {{- if .Values.scanner.persistence.memory }}
            medium : "Memory"
          {{- end }}
        {{- end }}
        - name: scan-socket
          emptyDir: {}
          {{- if .Values.scanner.client.containerSecurityContext.enabled }}          
        - name: client-tmp
          emptyDir: {}
          {{- end }}
      {{- with .Values.scanner.imagePullSecrets }}
      imagePullSecrets: 
        {{- toYaml . | nindent 8 }}
      {{- end }}
      containers:
        - name: {{ .Values.scanner.server.name }}
          env:
            - name: date
              value: "{{ now | unixEpoch }}"
          image: '{{ .Values.scanner.server.image.repository }}:{{ .Values.scanner.server.image.tag | default "latest" }}'
          imagePullPolicy: {{ .Values.scanner.server.image.pullPolicy }}
          volumeMounts:
            - name: samples
              mountPath: /tmp/scan
            - name: scan-socket
              mountPath: /var/share/run
            - name: server-var-log
              mountPath: /var/log
          resources:
            {{- toYaml .Values.scanner.resources.server | nindent 12 }}
        - name: {{ .Values.scanner.client.name }}
          image: '{{ .Values.scanner.client.image.repository }}:{{ .Values.scanner.client.image.tag | default "latest" }}'
          imagePullPolicy: {{ .Values.scanner.client.image.pullPolicy }}
          {{- if .Values.scanner.client.containerSecurityContext.enabled }}
          securityContext: {{- omit .Values.scanner.client.containerSecurityContext "enabled" | toYaml | nindent 12 }}
          {{- end }}
          volumeMounts:
            - name: samples
              mountPath: /tmp/scan
            - name: scan-socket
              mountPath: /var/share/run
              {{- if .Values.scanner.client.containerSecurityContext.enabled }}
            - name: client-tmp
              mountPath: /tmp
              {{- end }}
          resources:
            {{- toYaml .Values.scanner.resources.client | nindent 12 }}
          ports:
            - name: api
              containerPort: 8080
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /health
              port: api
            initialDelaySeconds: 5
            periodSeconds: 5
          readinessProbe:
            httpGet:
              path: /health
              port: api
            initialDelaySeconds: 5
            periodSeconds: 5     
      terminationGracePeriodSeconds: {{ .Values.scanner.terminationGracePeriodSeconds }}      
      {{- with .Values.scanner.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.scanner.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.scanner.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
{{- end }}